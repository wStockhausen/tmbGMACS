% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DimensionsFunctions.R
\name{createDimsMaps}
\alias{createDimsMaps}
\title{Create maps between sparse and dense dimension indices}
\usage{
createDimsMaps(...)
}
\arguments{
\item{...}{<[`dynamic-dots`][rlang::dyn-dots]> name/value dimension pairs}
}
\value{
a list with elements
\itemize{
\item{dfrS2D - tibble with mapping from sparse to dense (full) index values}
\item{dfrD2S - tibble with mapping from dense (full) to sparse index values}
}
}
\description{
Function to create maps between sparse and dense dimension indices.
}
\details{
Each name in
\code{...} should be the name of the terminal dimension in the associated value (a
possibly-nested dimension list or a vector of levels), as in [createSparseDimsMap()].
In \code{dfrS2D}, the row index corresponds to the 1's-based sparse index value.
In \code{dfrF2S}, the row index corresponds to the 1's-based full index value.
}
\examples{
#--create some example dimensions
require(tibble);
#----years
vYs = 2001:2005;                  attr(vYs,"dmnms")<-"y";
#----seasons
vCs = c("fall","spring");         attr(vCs,"dmnms")<-"c";
#----regions
vRs = c("All EBS");               attr(vRs,"dmnms")<-"r";
#----sexes
vXs = c("MALE","FEMALE");         attr(vXs,"dmnms")<-"x";
#----maturity state nested in sex (working outward)
vMs = list(  MALE=c("IMMATURE","MATURE"),
           FEMALE=c("IMMATURE","MATURE"));
attr(vMs,"dmnms")<-c("x","m");
#----shell condition nested in maturity state/sex (working outward)
vSs = list(MALE=  list(IMMATURE=c("NEW SHELL"),
                        MATURE=c("NEW SHELL","OLD SHELL")),
          FEMALE=list(IMMATURE=c("NEW SHELL"),
                        MATURE=c("NEW SHELL","OLD SHELL")));
attr(vSs,"dmnms")<-c("x","m","s");
#----ages nested in shell condition/maturity state/sex (working outward)
vAs = list(MALE=  list(IMMATURE=list(`NEW SHELL`="NO AGEs"),
                         MATURE=list(`NEW SHELL`=c("PTM 0"),
                                     `OLD SHELL`=c("PTM 1","PTM 2"))),
          FEMALE=list(IMMATURE=list(`NEW SHELL`="NO AGEs"),
                        MATURE=list(`NEW SHELL`=c("PTM 0"),
                                    `OLD SHELL`=c("PTM 1","PTM 2"))));
attr(vAs,"dmnms")<-c("x","m","s","a");
#----sizes nested in age/shell condition/maturity state/sex (working outward)
vZs = list( MALE=  list(IMMATURE=list(`NEW SHELL`=list(`NO AGEs`=seq(40,60,5))),
                          MATURE=list(`NEW SHELL`=list(`PTM 0`=seq(80,120,10)),
                                      `OLD SHELL`=list(`PTM 1`=seq(80,120,10),
                                                       `PTM 2`=seq(80,120,10)))),
          FEMALE=list(IMMATURE=list(`NEW SHELL`=list(`NO AGEs`=seq(25,50,5))),
                        MATURE=list(`NEW SHELL`=list(`PTM 0`=seq(50,100,10)),
                                    `OLD SHELL`=list(`PTM 1`=seq(50,100,10),
                                                     `PTM 2`=seq(50,100,10)))));
attr(vZs,"dmnms")<-c("x","m","s","a","z");

#----create the maps
require(tmbGMACS);
lst = createDimsMaps(y=vYs,c=vCs,r=vRs,x=vXs,m=vMs,s=vSs,a=vAs,z=vZs);
}
